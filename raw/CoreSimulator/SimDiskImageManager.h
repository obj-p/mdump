//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.463, BuildCommit: 58445e79785a177ff4da5bb2a954f4f416f21788)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.4, Tool: ld (1053.12)
//    - LC_SOURCE_VERSION: 947.13.0.0.0
//
#ifndef SimDiskImageManager_h
#define SimDiskImageManager_h
@import Foundation;

#include "OS_xpc_object-Protocol.h"
#include "SimDeviceNotificationManager.h"

@class NSArray, NSDictionary, NSURL;
@protocol OS_dispatch_queue;

@interface SimDiskImageManager : NSObject {
  /* instance variables */
  NSDictionary *_cachedDiskImages;
}

@property (copy, nonatomic) NSArray *ignoredMountDirectories;
@property (copy, nonatomic) NSArray *trustedMountDirectories;
@property (nonatomic) BOOL allowUntrustedMountDirectories;
@property (retain, nonatomic) NSObject<OS_xpc_object> *connection;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) unsigned long long connectionState;
@property (retain, nonatomic) SimDeviceNotificationManager *notificationManager;
@property (nonatomic) unsigned long long imagesUpdatedGeneration;
@property (copy) NSURL *developerDirectory;

/* class methods */
+ (id)serviceVersionWithError:(id *)error;
+ (BOOL)askServiceToRestartIfNotVersion:(id)version error:(id *)error;
+ (BOOL)kickstartServiceWithError:(id *)error;
+ (id)sharedManager;
+ (void)_didUseRuntimeBundleAtURL:(id)url;

/* instance methods */
- (id)init;
- (BOOL)_onQueue_checkConnection:(id *)connection;
- (BOOL)_checkConnectionWithErrorQueue:(id)queue errorHandler:(id /* block */)handler;
- (id)trustedMountDirectoriesWithError:(id *)error;
- (void)_onQueue_handleImagesUpdated:(id)updated;
- (void)_handleXPCEvent:(id)xpcevent;
- (BOOL)shouldLoadRuntimesAtDiskMountPoint:(id)point;
- (id)_developerDir;
- (void)listDiskImagesOnCompletionQueue:(id)queue completionHandler:(id /* block */)handler;
- (id)diskImages;
- (id)diskImagesMatchingPlatform:(id)platform;
- (unsigned long long)registerDiskImagesUpdatedHandlerOnQueue:(id)queue handler:(id /* block */)handler;
- (BOOL)unregisterDiskImagesUpdatedHandler:(unsigned long long)handler error:(id *)error;
- (void)addDiskImageAtURL:(id)url copyMoveStrategy:(unsigned long long)strategy expandPartition:(BOOL)partition userInfo:(id)info completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)addDiskImageAtURL:(id)url copyMoveStrategy:(unsigned long long)strategy expandPartition:(BOOL)partition userInfo:(id)info certificateURL:(id)url certificateAuth:(id)auth completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)addDiskImageAtURL:(id)url copyMoveStrategy:(unsigned long long)strategy expandPartition:(BOOL)partition userInfo:(id)info dawToken:(id)token completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)addDiskImageAtURL:(id)url copyMoveStrategy:(unsigned long long)strategy expandPartition:(BOOL)partition alwaysPersonalize:(BOOL)personalize userInfo:(id)info dawToken:(id)token certificateURL:(id)url certificateAuth:(id)auth completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)addDiskImageAtURL:(id)url copyMoveStrategy:(unsigned long long)strategy expandPartition:(BOOL)partition alwaysPersonalize:(BOOL)personalize mountingMode:(long long)mode userInfo:(id)info dawToken:(id)token certificateURL:(id)url certificateAuth:(id)auth completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (id)_personalizationManifestFilePathForDiskImageAtURL:(id)url alwaysPersonalize:(BOOL)personalize cryptexVariant:(id)variant originalImageURL:(id)url error:(id *)error;
- (void)addCredentialsToRequest:(id)request dawToken:(id)token certificateURL:(id)url certificateAuth:(id)auth;
- (void)_addDiskImageAtURL:(id)url copyMoveStrategy:(unsigned long long)strategy expandPartition:(BOOL)partition alwaysPersonalize:(BOOL)personalize mountingMode:(long long)mode userInfo:(id)info dawToken:(id)token certificateURL:(id)url certificateAuth:(id)auth completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_addInnerDiskImageAtURL:(id)url parentUUID:(id)uuid parentMountURL:(id)url copyMoveStrategy:(unsigned long long)strategy expandPartition:(BOOL)partition userInfo:(id)info dawToken:(id)token certificateURL:(id)url certificateAuth:(id)auth personalizationManifestURL:(id)url supportedCryptexVariant:(id)variant completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_mountToDetectImageBundle:(id)bundle copyMoveStrategy:(unsigned long long)strategy dawToken:(id)token certificateURL:(id)url certificateAuth:(id)auth completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (BOOL)notifyServiceCryptexWillUnmountForMountURL:(id)url withError:(id *)error;
- (void)deleteDiskImage:(id)image completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)verifyDiskImage:(id)image completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_didUseRuntimeBundleAtURL:(id)url;
@end

#endif /* SimDiskImageManager_h */
