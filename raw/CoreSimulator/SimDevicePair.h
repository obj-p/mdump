//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.463, BuildCommit: 58445e79785a177ff4da5bb2a954f4f416f21788)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.4, Tool: ld (1053.12)
//    - LC_SOURCE_VERSION: 947.13.0.0.0
//
#ifndef SimDevicePair_h
#define SimDevicePair_h
@import Foundation;

#include "SimDevice.h"
#include "SimDeviceNotificationManager.h"
#include "SimDeviceNotifier-Protocol.h"
#include "SimDeviceSet.h"

@class NSMutableArray, NSUUID;
@protocol OS_dispatch_queue;

@interface SimDevicePair : NSObject<SimDeviceNotifier>

@property (copy, nonatomic) NSUUID *UUID;
@property (retain, nonatomic) SimDevice *gizmo;
@property (retain, nonatomic) SimDevice *companion;
@property (nonatomic) BOOL active;
@property (weak, nonatomic) SimDeviceSet *deviceSet;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *pairingStateQueue;
@property (retain, nonatomic) NSMutableArray *disconnectSources;
@property (nonatomic) unsigned long long gizmoNotificationRegID;
@property (nonatomic) unsigned long long companionNotificationRegID;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *stateVariableQueue;
@property (retain, nonatomic) SimDeviceNotificationManager *notificationManager;
@property (readonly, nonatomic) BOOL connected;

/* class methods */
+ (id)SimDevicePairWithUUID:(id)uuid gizmo:(id)gizmo companion:(id)companion active:(BOOL)active connected:(BOOL)connected deviceSet:(id)set;
+ (BOOL)testPossiblePairingWithDeviceTypeA:(id)a RuntimeA:(id)a DeviceTypeB:(id)b RuntimeB:(id)b error:(id *)error;

/* instance methods */
- (id)initWithUUID:(id)uuid gizmo:(id)gizmo companion:(id)companion active:(BOOL)active connected:(BOOL)connected deviceSet:(id)set;
- (void)invalidate;
- (unsigned long long)registerNotificationHandlerOnQueue:(id)queue handler:(id /* block */)handler;
- (BOOL)unregisterNotificationHandler:(unsigned long long)handler error:(id *)error;
- (id)description;
- (long long)compare:(id)compare;
- (id)createXPCRequest:(id)xpcrequest;
- (id)createXPCNotification:(id)xpcnotification;
- (id)newDevicePairNotification;
- (void)handleXPCRequest:(id)xpcrequest;
- (void)handleXPCRequestPairSetActive:(id)active;
- (void)handleXPCNotification:(id)xpcnotification;
- (void)handleXPCNotificationPairSetActive:(id)active;
- (void)handleXPCNotificationPairConnectionStateChanged:(id)changed;
- (BOOL)setActiveWithError:(id *)error;
- (void)setActiveAsyncWithCompletionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)addDisconnectMonitorPort:(unsigned int)port;
- (void)ONPSQ_connectIPCRelayOnDevices;
- (void)ONPSQ_disconnectIPCRelayOnDevices;
- (void)ONPSQ_setActiveOnPairedDevices;
- (void)beginPairedDeviceMonitoring;
- (void)ONPSQ_endPairedDeviceMonitoring;
- (void)endPairedDeviceMonitoring;
@end

#endif /* SimDevicePair_h */
