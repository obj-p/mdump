//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.463, BuildCommit: 58445e79785a177ff4da5bb2a954f4f416f21788)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.4, Tool: ld (1053.12)
//    - LC_SOURCE_VERSION: 947.13.0.0.0
//
#ifndef SimDeviceSet_h
#define SimDeviceSet_h
@import Foundation;

#include "SimDeviceNotificationManager.h"
#include "SimDeviceNotifier-Protocol.h"
#include "SimServiceContext.h"

@class NSArray, NSDictionary, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface SimDeviceSet : NSObject<SimDeviceNotifier>

@property (copy, nonatomic) NSString *setPath;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *deviceNotificationQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *devicesQueue;
@property (retain, nonatomic) NSMutableDictionary *_devicesByUDID;
@property (retain, nonatomic) NSMutableDictionary *devicesNotificationRegIDs;
@property (retain, nonatomic) NSMutableDictionary *_devicePairsByUUID;
@property (retain, nonatomic) NSMutableDictionary *devicePairsNotificationRegIDs;
@property (retain, nonatomic) NSMutableDictionary *deviceDeletionCountByUDID;
@property (retain, nonatomic) SimServiceContext *serviceContext;
@property (retain, nonatomic) SimDeviceNotificationManager *notificationManager;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *defaultCreatedDevicesQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *deviceDeletionQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *hostDeathQueue;
@property (retain, nonatomic) NSMutableDictionary *hostDeathSourceByUDID;
@property (retain, nonatomic) NSMutableDictionary *defaultCreatedDevices;
@property (retain, nonatomic) NSString *defaultCreatedLastDeveloperDir;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *saveToDiskSource;
@property (readonly, nonatomic) NSDictionary *devicesByUDID;
@property (readonly, nonatomic) NSArray *devices;
@property (readonly, nonatomic) NSArray *availableDevices;
@property (readonly, nonatomic) NSDictionary *devicePairsByUUID;
@property (readonly, nonatomic) NSArray *devicePairs;
@property (readonly, nonatomic) NSArray *availableDevicePairs;

/* class methods */
+ (id)defaultSetPath;
+ (id)saveToDiskQueue;
+ (id)validGizmoVersionByCompanionVersion;

/* instance methods */
- (BOOL)isDefaultSet;
- (BOOL)subscribeToNotificationsWithError:(id *)error;
- (id)initWithSetPath:(id)path serviceContext:(id)context;
- (BOOL)processDeviceSetPlist;
- (void)saveToDisk;
- (void)_onSaveToDiskQueue_saveToDisk;
- (id)description;
- (BOOL)isDeviceInSet:(id)set;
- (id)devicePairsContainingDeviceUDID:(id)udid;
- (id)devicePairsContainingDevice:(id)device;
- (void)updateDefaultDevicesAndPairingsForDeveloperDir:(id)dir force:(BOOL)force;
- (void)updateDefaultDevicesAndPairingsAsyncForDeveloperDir:(id)dir force:(BOOL)force;
- (void)_onDefaultCreatedDevicesQueue_updateDefaultDevicesAndPairingsForDeveloperDir:(id)dir force:(BOOL)force;
- (void)_onDefaultCreatedDevicesQueue_updateDefaultDevicesForDeveloperDir:(id)dir;
- (void)_onDefaultCreatedDevicesQueue_updateDefaultDevicePairingsForDeveloperDir:(id)dir;
- (void)_onDefaultCreatedDevicesQueue_updateDefaultDevicePairingsWithCompanionRuntime:(id)runtime gizmoRuntime:(id)runtime;
- (void)addDeviceAsync:(id)async;
- (void)addDevice:(id)device;
- (void)_onDeviceQueue_addDevice:(id)device;
- (void)removeDeviceAsync:(id)async;
- (void)addDevicePairAsync:(id)async;
- (void)addDevicePair:(id)pair;
- (void)_onDevicesQueue_addDevicePair:(id)pair;
- (void)removeDevicePairAsync:(id)async;
- (unsigned long long)registerNotificationHandlerOnQueue:(id)queue handler:(id /* block */)handler;
- (void)sendNotification:(id)notification;
- (BOOL)unregisterNotificationHandler:(unsigned long long)handler error:(id *)error;
- (id)_awaitDeviceWithUDID:(id)udid;
- (id)_awaitDevicePairWithUUID:(id)uuid;
- (void)createDeviceAsyncWithType:(id)type runtime:(id)runtime name:(id)name completionHandler:(id /* block */)handler;
- (void)createDeviceAsyncWithType:(id)type runtime:(id)runtime name:(id)name completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)createDeviceAsyncWithType:(id)type runtime:(id)runtime name:(id)name options:(id)options completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (id)createDeviceWithType:(id)type runtime:(id)runtime name:(id)name error:(id *)error;
- (id)createDeviceWithType:(id)type runtime:(id)runtime name:(id)name options:(id)options error:(id *)error;
- (void)deleteDeviceAsync:(id)async completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)deleteDeviceAsync:(id)async completionHandler:(id /* block */)handler;
- (BOOL)deleteDevice:(id)device error:(id *)error;
- (void)cloneDeviceAsync:(id)async name:(id)name completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)cloneDeviceAsync:(id)async name:(id)name toSet:(id)set completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)cloneDeviceAsync:(id)async name:(id)name options:(id)options toSet:(id)set completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (id)cloneDevice:(id)device name:(id)name error:(id *)error;
- (id)cloneDevice:(id)device name:(id)name options:(id)options error:(id *)error;
- (id)cloneDevice:(id)device name:(id)name toSet:(id)set error:(id *)error;
- (id)cloneDevice:(id)device name:(id)name options:(id)options toSet:(id)set error:(id *)error;
- (void)shutdownBootedDevicesMatchingVolumeURL:(id)url completionGroup:(id)group deviceShutdownHandler:(id /* block */)handler;
- (BOOL)testDevicePairingBetweenGizmo:(id)gizmo companion:(id)companion error:(id *)error;
- (void)createDevicePairAsyncWithGizmo:(id)gizmo companion:(id)companion completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)createDevicePairAsyncWithGizmo:(id)gizmo companion:(id)companion completionHandler:(id /* block */)handler;
- (id)createDevicePairWithGizmo:(id)gizmo companion:(id)companion error:(id *)error;
- (void)unpairDevicePairAsync:(id)async completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)unpairDevicePairAsync:(id)async completionHandler:(id /* block */)handler;
- (BOOL)unpairDevicePair:(id)pair error:(id *)error;
- (void)runBackgroundDeviceDeleteAsync;
- (BOOL)setupHostDeathWatchForDevice:(id)device deathPort:(id)port error:(id *)error;
- (void)handleXPCNotification:(id)xpcnotification;
- (void)handleXPCNotificationDeviceAdded:(id)added;
- (void)handleXPCNotificationDeviceRemoved:(id)removed;
- (void)handleXPCNotificationDevicePairAdded:(id)added;
- (void)handleXPCNotificationDevicePairRemoved:(id)removed;
- (void)handleXPCRequest:(id)xpcrequest;
- (void)handleXPCRequestCreateDevice:(id)device;
- (void)handleXPCRequestCloneDevice:(id)device device:(id)device;
- (void)handleXPCRequestDeleteDevice:(id)device device:(id)device;
- (void)handleXPCRequestPair:(id)pair;
- (void)handleXPCRequestUnpair:(id)unpair;
@end

#endif /* SimDeviceSet_h */
