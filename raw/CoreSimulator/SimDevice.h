//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.463, BuildCommit: 58445e79785a177ff4da5bb2a954f4f416f21788)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.4, Tool: ld (1053.12)
//    - LC_SOURCE_VERSION: 947.13.0.0.0
//
#ifndef SimDevice_h
#define SimDevice_h
@import Foundation;

#include "OS_xpc_object-Protocol.h"
#include "SimDeviceBootInfo.h"
#include "SimDeviceIOProtocol-Protocol.h"
#include "SimDeviceNotificationManager.h"
#include "SimDeviceNotifier-Protocol.h"
#include "SimDevicePasteboard.h"
#include "SimDeviceSet.h"
#include "SimDeviceType.h"
#include "SimLaunchHostClient.h"
#include "SimRuntime.h"

@class NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSUUID, SimMachPort;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface SimDevice : NSObject<SimDeviceNotifier> {
  /* instance variables */
  SimDeviceBootInfo *_bootStatus;
  SimMachPort *_hostSupportPort;
  BOOL _isEphemeral;
}

@property (copy, nonatomic) NSString *deviceTypeIdentifier;
@property (copy, nonatomic) NSUUID *UDID;
@property (weak, nonatomic) SimDeviceSet *deviceSet;
@property (nonatomic) BOOL isDeleted;
@property (readonly, nonatomic) NSString *logPath;
@property (retain, nonatomic) SimDeviceNotificationManager *notificationManager;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *bootstrapQueue;
@property (retain, nonatomic) NSMutableDictionary *registeredServices;
@property (retain, nonatomic) NSMutableDictionary *registeredXPCServices;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *stateVariableQueue;
@property (retain, nonatomic) NSUUID *bootSessionUUID;
@property (retain) SimDeviceType *deviceTypeOverride;
@property (retain) SimRuntime *runtimeOverride;
@property (nonatomic) unsigned long long runtimePolicy;
@property (copy, nonatomic) NSString *runtimeSpecifier;
@property (nonatomic) atomic unsigned long long bootGeneration;
@property (readonly, nonatomic) NSArray *launchDaemonsPaths;
@property (retain, nonatomic) SimDevicePasteboard *pasteboard;
@property (nonatomic) unsigned long long pasteboardNotificationRegistrationID;
@property (nonatomic) unsigned long long validationRetryNotificationRegistrationID;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *bootMonitorTimer;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *bootMonitorQueue;
@property (retain, nonatomic) NSDate *bootStartedAt;
@property (retain, nonatomic) NSDictionary *providerEnvironmentVars;
@property (readonly, nonatomic) SimLaunchHostClient *launchHostClient;
@property (retain, nonatomic) NSObject<OS_xpc_object> *accessibilityConnection;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *notificationProxyQueue;
@property (retain, nonatomic) NSMutableArray *darwinNotificationTokens;
@property (copy, nonatomic) NSDictionary *bootEnvironmentExtra;
@property (readonly, nonatomic) SimDeviceType *deviceType;
@property (readonly, nonatomic) SimRuntime *runtime;
@property (readonly, nonatomic) NSString *runtimeIdentifier;
@property (readonly, nonatomic) unsigned long long state;
@property (readonly, nonatomic) NSString *stateString;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) NSString *descriptiveName;
@property (readonly, nonatomic) NSArray *supportedArchs;
@property (readonly, nonatomic) NSArray *supportedArchStrings;
@property (readonly, nonatomic) NSArray *deviceSets;
@property (readonly, nonatomic) NSDate *lastBootedAt;
@property (readonly, nonatomic) BOOL available;
@property (retain, nonatomic) NSObject<SimDeviceIOProtocol> *io;

/* class methods */
+ (id)createDeviceWithName:(id)name deviceSet:(id)set deviceType:(id)type runtime:(id)runtime initialDataPath:(id)path error:(id *)error;
+ (id)simDeviceAtPath:(id)path deviceSet:(id)set;
+ (id)simDevice:(id)device UDID:(id)udid deviceTypeIdentifier:(id)identifier runtimeIdentifier:(id)identifier runtimePolicy:(unsigned long long)policy runtimeSpecifier:(id)specifier state:(unsigned long long)state lastBootedAt:(id)at deviceSet:(id)set;
+ (BOOL)isValidState:(unsigned long long)state;
+ (BOOL)supportsFeature:(id)feature deviceType:(id)type runtime:(id)runtime;
+ (id)_xpcMessageWithAXRequest:(id)axrequest;
+ (id)_axResponseFromXPCMessage:(id)xpcmessage;

/* instance methods */
- (long long)currentUIInterfaceStyle;
- (BOOL)setUIInterfaceStyle:(long long)style error:(id *)error;
- (BOOL)setPrivacyAccessForService:(id)service bundleID:(id)id granted:(BOOL)granted error:(id *)error;
- (BOOL)resetPrivacyAccessForService:(id)service bundleID:(id)id error:(id *)error;
- (BOOL)connectIDSRelayToDevice:(id)device disconnectMonitorPort:(unsigned int *)port error:(id *)error;
- (BOOL)disconnectIDSRelayToDevice:(id)device error:(id *)error;
- (BOOL)setActiveIDSRelayDevice:(id)device error:(id *)error;
- (BOOL)unpairIDSRelayWithDevice:(id)device error:(id *)error;
- (BOOL)setDisplayBacklightActive:(BOOL)active error:(id *)error;
- (id)availableLocationScenarios;
- (BOOL)clearSimulatedLocationWithError:(id *)error;
- (BOOL)setLocationScenario:(id)scenario error:(id *)error;
- (BOOL)setLocationScenarioWithPath:(id)path error:(id *)error;
- (BOOL)setLocationWithLatitude:(double)latitude andLongitude:(double)longitude error:(id *)error;
- (BOOL)startLocationSimulationWithDistance:(double)distance speed:(double)speed waypoints:(id)waypoints error:(id *)error;
- (BOOL)startLocationSimulationWithInterval:(double)interval speed:(double)speed waypoints:(id)waypoints error:(id *)error;
- (BOOL)_startLocationSimulationWithDistance:(double)distance interval:(double)interval speed:(double)speed waypoints:(id)waypoints error:(id *)error;
- (BOOL)_sendStatusBarOverrideDict:(id)dict error:(id *)error;
- (BOOL)overrideStatusBarTimeString:(id)string error:(id *)error;
- (BOOL)overrideStatusBarDataNetworkType:(unsigned long long)type error:(id *)error;
- (BOOL)overrideStatusBarWiFiMode:(unsigned long long)mode bars:(unsigned long long)bars error:(id *)error;
- (BOOL)overrideStatusBarCellularMode:(unsigned long long)mode operatorName:(id)name bars:(unsigned long long)bars error:(id *)error;
- (BOOL)overrideStatusBarBatteryState:(unsigned long long)state batteryLevel:(unsigned long long)level showNotCharging:(BOOL)charging error:(id *)error;
- (BOOL)clearStatusBarOverrides:(unsigned long long)overrides error:(id *)error;
- (BOOL)currentStatusBarOverridesForTimeString:(id *)string dataNetworkType:(id *)type wiFiMode:(id *)mode wiFiBars:(id *)bars cellularMode:(id *)mode operatorName:(id *)name cellularBars:(id *)bars batteryState:(id *)state batteryLevel:(id *)level showNotCharging:(id *)charging error:(id *)error;
- (BOOL)getCADebugOption:(unsigned int)option;
- (void)setCADebugOption:(unsigned int)option enabled:(BOOL)enabled;
- (BOOL)updateNearbyInteractionDeviceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect deviceRotation:(double)rotation error:(id *)error;
- (void)bootAsyncWithOptions:(id)options completionHandler:(id /* block */)handler;
- (void)shutdownAsyncWithCompletionHandler:(id /* block */)handler;
- (void)renameAsync:(id)async completionHandler:(id /* block */)handler;
- (void)eraseContentsAndSettingsAsyncWithCompletionHandler:(id /* block */)handler;
- (void)restoreContentsAndSettingsAsyncFromDevice:(id)device completionHandler:(id /* block */)handler;
- (void)spawnAsyncWithPath:(id)path options:(id)options terminationHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (int)spawnWithPath:(id)path options:(id)options terminationHandler:(id /* block */)handler error:(id *)error;
- (void)launchApplicationAsyncWithID:(id)id options:(id)options completionHandler:(id /* block */)handler;
- (void)triggerCloudSyncWithCompletionHandler:(id /* block */)handler;
- (long long)currentIncreaseContrastMode;
- (BOOL)setIncreaseContrastEnabled:(BOOL)enabled error:(id *)error;
- (long long)currentContentSizeCategory;
- (BOOL)setContentSizeCategory:(long long)category error:(id *)error;
- (BOOL)addCertificateAtURL:(id)url trustAsRoot:(BOOL)root error:(id *)error;
- (BOOL)resetKeychainWithError:(id *)error;
- (BOOL)sendPushNotificationForBundleID:(id)id jsonPayload:(id)payload error:(id *)error;
- (id)initDevice:(id)device UDID:(id)udid deviceTypeIdentifier:(id)identifier runtimeIdentifier:(id)identifier runtimePolicy:(unsigned long long)policy runtimeSpecifier:(id)specifier state:(unsigned long long)state initialDataPath:(id)path preparingForDeletion:(BOOL)deletion isEphemeral:(BOOL)ephemeral lastBootedAt:(id)at deviceSet:(id)set;
- (void)_mergeProviderEnvironmentVars:(id)vars;
- (void)_onBootstrapQueue_notifyDeviceIOBooted;
- (BOOL)_onBootstrapQueue_initializeDeviceIO:(id *)io;
- (void)_onBootstrapQueue_lazilyInitLegacyPasteboard;
- (void)dealloc;
- (id)description;
- (id)debugDescription;
- (void)validateAndFixStateUsingInitialDataPath:(id)path;
- (BOOL)setRuntimePolicy:(unsigned long long)policy withRuntimeSpecifier:(id)specifier error:(id *)error;
- (void)_setRuntimePolicy:(unsigned long long)policy withRuntimeSpecifier:(id)specifier;
- (BOOL)_findSimRuntimeWithPolicyBlock:(id /* block */)block policyName:(id)name context:(id)context runtimeSpecifier:(id)specifier error:(id *)error;
- (id)saveStateDict;
- (void)saveToDisk;
- (id)launchdJobName;
- (BOOL)supportsFeature:(id)feature;
- (BOOL)ensureRequiredPathsWithError:(id *)error;
- (BOOL)clearTmpWithError:(id *)error;
- (BOOL)createDarwinNotificationProxy:(id)proxy toSimAs:(id)as withState:(BOOL)state error:(id *)error;
- (BOOL)createDarwinNotificationProxiesWithError:(id *)error;
- (BOOL)createOverlayLaunchdPlistsFromFilesInDirectory:(id)directory executableRoot:(id)root error:(id *)error;
- (BOOL)createOverlayLaunchdPlistsWithError:(id *)error;
- (BOOL)createLaunchdJobWithBinpref:(id)binpref extraEnvironment:(id)environment disabledJobs:(id)jobs error:(id *)error;
- (BOOL)removeLaunchdJobWithError:(id *)error;
- (id)portsToRegisterWithLaunchd;
- (BOOL)startLaunchdWithDeathPort:(id)port error:(id *)error;
- (void)bootAsyncWithOptions:(id)options completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (BOOL)bootWithOptions:(id)options error:(id *)error;
- (BOOL)_onBootstrapQueue_bootWithOptions:(id)options error:(id *)error;
- (BOOL)_onBootstrapQueue_bootWithOptions:(id)options deathMonitorPort:(id)port error:(id *)error;
- (void)_onBootMonitorQueue_bootStatusTimerFired;
- (BOOL)_sendBridgeRequest:(id /* block */)request caller:(SEL)caller error:(id *)error;
- (BOOL)_sendBridgeRequest:(id /* block */)request caller:(SEL)caller operationDescription:(id)description error:(id *)error;
- (void)_shutdownIfProfilesOrDataURLsOnVolume:(id)volume completionGroup:(id)group deviceShutdownHandler:(id /* block */)handler;
- (void)shutdownAsyncWithCompletionQueue:(id)queue completionHandler:(id /* block */)handler;
- (BOOL)shutdownWithError:(id *)error;
- (BOOL)_onBootstrapQueue_shutdownWithError:(id *)error;
- (BOOL)_onBootstrapQueue_shutdownIOAndNotifyWithError:(id *)error;
- (void)_executeOnBootstrapQueue:(id /* block */)queue;
- (void)_forDeviceIO_assertBootstrapQueue;
- (void)renameAsync:(id)async completionQueue:(id)queue completetionHandler:(id /* block */)handler;
- (BOOL)rename:(id)rename error:(id *)error;
- (BOOL)_onBootstrapQueue_rename:(id)queue_rename error:(id *)error;
- (BOOL)prepareForDeletionWithError:(id *)error;
- (BOOL)_onBootstrapQueue_prepareForDeletionWithError:(id *)error;
- (void)upgradeAsyncToRuntime:(id)runtime completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (BOOL)upgradeToRuntime:(id)runtime error:(id *)error;
- (BOOL)_onBootstrapQueue_upgradeToRuntime:(id)runtime error:(id *)error;
- (void)eraseContentsAndSettingsAsyncWithCompletionQueue:(id)queue completionHandler:(id /* block */)handler;
- (BOOL)eraseContentsAndSettingsWithError:(id *)error;
- (BOOL)_onBootstrapQueue_eraseContentsAndSettingsUsingInitialDataPath:(id)path error:(id *)error;
- (void)restoreContentsAndSettingsAsyncFromDevice:(id)device completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (BOOL)restoreContentsAndSettingsFromDevice:(id)device error:(id *)error;
- (BOOL)_onBootstrapQueue_restoreContentsAndSettingsFromDevice:(id)device error:(id *)error;
- (id)getenv:(id)getenv error:(id *)error;
- (unsigned int)lookup:(id)lookup error:(id *)error;
- (BOOL)_registerPort:(unsigned int)port service:(id)service error:(id *)error;
- (BOOL)_registerSimMachPort:(id)port service:(id)service error:(id *)error;
- (BOOL)_sendRegisterPortRequestForPort:(unsigned int)port service:(id)service serviceContext:(id)context error:(id *)error;
- (BOOL)registerPort:(unsigned int)port service:(id)service error:(id *)error;
- (BOOL)_unregisterService:(id)service error:(id *)error;
- (BOOL)unregisterService:(id)service error:(id *)error;
- (BOOL)registerXPCServiceName:(id)name peerHandlerQueue:(id)queue peerHandler:(id /* block */)handler error:(id *)error;
- (BOOL)unregisterXPCServiceName:(id)name error:(id *)error;
- (void)spawnAsyncWithPath:(id)path options:(id)options terminationQueue:(id)queue terminationHandler:(id /* block */)handler completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (int)spawnWithPath:(id)path options:(id)options terminationQueue:(id)queue terminationHandler:(id /* block */)handler error:(id *)error;
- (BOOL)spawnWithPath:(id)path options:(id)options terminationQueue:(id)queue terminationHandler:(id /* block */)handler pid:(int *)pid error:(id *)error;
- (int)_onBootstrapQueue_spawnWithPath:(id)path options:(id)options terminationQueue:(id)queue terminationHandler:(id /* block */)handler error:(id *)error;
- (int)_spawnFromLaunchdWithPath:(id)path options:(id)options terminationQueue:(id)queue terminationHandler:(id /* block */)handler error:(id *)error;
- (int)_spawnFromSelfWithPath:(id)path options:(id)options terminationQueue:(id)queue terminationHandler:(id /* block */)handler error:(id *)error;
- (id)environment;
- (id)devicePath;
- (id)dataPath;
- (id)memoryWarningFilePath;
- (void)simulateMemoryWarning;
- (unsigned long long)registerNotificationHandlerOnQueue:(id)queue handler:(id /* block */)handler;
- (BOOL)unregisterNotificationHandler:(unsigned long long)handler error:(id *)error;
- (void)setState:(unsigned long long)state lastBootedAt:(id)at;
- (id)bootStatus;
- (void)setBootStatus:(id)status;
- (BOOL)isEphemeral;
- (void)setIsEphemeral:(BOOL)ephemeral;
- (void)handleXPCNotification:(id)xpcnotification;
- (void)handleXPCNotificationDeviceStateChanged:(id)changed;
- (void)handleXPCNotificationDeviceBootStatusChanged:(id)changed;
- (void)handleXPCRequest:(id)xpcrequest;
- (void)handleXPCRequestRename:(id)rename;
- (void)handleXPCRequestBoot:(id)boot;
- (void)handleXPCRequestShutdown:(id)shutdown;
- (void)handleXPCRequestUpgrade:(id)upgrade;
- (void)handleXPCRequestErase:(id)erase;
- (void)handleXPCRequestRestore:(id)restore;
- (void)handleXPCRequestRegister:(id)register;
- (void)handleXPCRequestUnregister:(id)unregister;
- (void)handleXPCRequestLookup:(id)lookup;
- (void)handleXPCRequestGetenv:(id)getenv;
- (void)handleXPCRequestSetRuntimePolicy:(id)policy;
- (void)handleXPCRequestDeviceIOEnumeratePorts:(id)ports;
- (void)handleXPCRequestUpdateNearbyInteraction:(id)interaction;
- (id)createXPCRequest:(id)xpcrequest;
- (id)createXPCNotification:(id)xpcnotification;
- (id)newDeviceNotification;
- (long long)compare:(id)compare;
- (id)hostSupportPortWithError:(id *)error;
- (BOOL)openURL:(id)url error:(id *)error;
- (BOOL)enableCarPlay:(BOOL)play error:(id *)error;
- (BOOL)addMedia:(id)media error:(id *)error;
- (BOOL)addPhoto:(id)photo error:(id *)error;
- (BOOL)addVideo:(id)video error:(id *)error;
- (BOOL)setKeyboardLanguage:(id)language error:(id *)error;
- (BOOL)setHardwareKeyboardEnabled:(BOOL)enabled keyboardType:(unsigned char)type error:(id *)error;
- (BOOL)installApplication:(id)application withOptions:(id)options error:(id *)error;
- (BOOL)uninstallApplication:(id)application withOptions:(id)options error:(id *)error;
- (BOOL)applicationIsInstalled:(id)installed type:(id *)type error:(id *)error;
- (id)propertiesOfApplication:(id)application error:(id *)error;
- (id)installedAppsWithError:(id *)error;
- (void)launchApplicationAsyncWithID:(id)id options:(id)options completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (int)launchApplicationWithID:(id)id options:(id)options error:(id *)error;
- (BOOL)launchApplicationWithID:(id)id options:(id)options pid:(int *)pid error:(id *)error;
- (BOOL)terminateApplicationWithID:(id)id error:(id *)error;
- (BOOL)postDarwinNotification:(id)notification error:(id *)error;
- (BOOL)darwinNotificationGetState:(unsigned long long *)state name:(id)name error:(id *)error;
- (BOOL)darwinNotificationSetState:(unsigned long long)state name:(id)name error:(id *)error;
- (void)triggerCloudSyncWithCompletionQueue:(id)queue completionHandler:(id /* block */)handler;
- (BOOL)triggerCloudSyncWithError:(id *)error;
- (BOOL)syncUnpairedDevicesWithError:(id *)error;
- (BOOL)installApplicationDataContainer:(id)container error:(id *)error;
- (BOOL)isAvailableWithError:(id *)error;
- (id)_onBootstrapQueue_deviceIOCreatingIfNeeded;
- (void)bootstrapQueueAsync:(id /* block */)async completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (BOOL)bootstrapQueueSync:(id /* block */)sync;
- (id)accessibilityPlatformTranslationToken;
- (void)sendAccessibilityRequestAsync:(id)async completionQueue:(id)queue completionHandler:(id /* block */)handler;
@end

#endif /* SimDevice_h */
